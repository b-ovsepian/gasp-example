{"version":3,"sources":["webpack:///./index.js"],"names":["gsap","registerPlugin","Draggable","cursorOuter","document","querySelector","cursorInner","isStuck","mouse","x","y","scrollHeight","window","addEventListener","e","scrollY","cursorOuterOriginalState","width","getBoundingClientRect","height","handleMouseEnter","targetBox","currentTarget","to","left","top","borderRadius","backgroundColor","handleMouseLeave","querySelectorAll","forEach","button","body","pageX","pageY","scale","updateCursor","set","duration","requestAnimationFrame","$","$dragMe","$beforeAfter","$viewAfter","updateImages","TweenLite","css","animateTo","_left","onUpdate","create","type","bounds","onDrag","on","event","clientX","offset"],"mappings":"sNAMAA,IAAKC,eAAeC,KAEpB,IAAMC,EAAcC,SAASC,cAAc,kBACrCC,EAAcF,SAASC,cAAc,kBACvCE,GAAU,EACVC,EAAQ,CACVC,GAAI,IACJC,GAAI,KAIFC,EAAe,EACnBC,OAAOC,iBAAiB,UAAU,SAAUC,GAC1CH,EAAeC,OAAOG,WAGxB,IAAIC,EAA2B,CAC7BC,MAAOd,EAAYe,wBAAwBD,MAC3CE,OAAQhB,EAAYe,wBAAwBC,QA6C9C,SAASC,EAAiBN,GACxBP,GAAU,EACV,IAAMc,EAAYP,EAAEQ,cAAcJ,wBAClClB,IAAKuB,GAAGpB,EAAa,GAAK,CACxBM,EAAGY,EAAUG,KACbd,EAAGW,EAAUI,IAAMd,EACnBM,MAAOI,EAAUJ,MACjBE,OAAQE,EAAUJ,MAClBS,aAAc,EACdC,gBAAiB,6BAIrB,SAASC,EAAiBd,GACxBP,GAAU,EACVP,IAAKuB,GAAGpB,EAAa,GAAK,CACxBc,MAAOD,EAAyBC,MAChCE,OAAQH,EAAyBC,MACjCS,aAAc,MACdC,gBAAiB,gBA9DLvB,SAASyB,iBAAiB,WAElCC,SAAQ,SAAAC,GACdA,EAAOlB,iBAAiB,eAAgBO,GACxCW,EAAOlB,iBAAiB,eAAgBe,MAG1CxB,SAAS4B,KAAKnB,iBAAiB,eAY/B,SAA8BC,GAC5BN,EAAMC,EAAIK,EAAEmB,MACZzB,EAAME,EAAII,EAAEoB,SAbd9B,SAAS4B,KAAKnB,iBAAiB,eAAe,WAC5Cb,IAAKuB,GAAGjB,EAAa,IAAM,CACzB6B,MAAO,OAGX/B,SAAS4B,KAAKnB,iBAAiB,aAAa,WAC1Cb,IAAKuB,GAAGjB,EAAa,IAAM,CACzB6B,MAAO,OASX,SAASC,IACPpC,IAAKqC,IAAI/B,EAAa,CACpBG,EAAGD,EAAMC,EACTC,EAAGF,EAAME,IAGNH,GACHP,IAAKuB,GAAGpB,EAAa,CACnBmC,SAAU,IACV7B,EAAGD,EAAMC,EAAIO,EAAyBC,MAAQ,EAC9CP,EAAGF,EAAME,EAAIM,EAAyBG,OAAS,IAInDoB,sBAAsBH,GAGxBA,GAyBAI,KAAE,WACA,IAAIC,EAAUD,IAAE,WACZE,EAAeF,IAAE,iBACjBG,EAAaH,IAAE,eAQnB,SAASI,IACPC,IAAUR,IAAIM,EAAY,CAAE1B,MAAOwB,EAAQK,IAAI,UAMjD,SAASC,EAAUC,GACjBH,IAAUtB,GAAGkB,EAAS,EAAG,CAAEjB,KAAMwB,EAAOC,SAAUL,IAdpD1C,IAAUgD,OAAOT,EAAS,CACxBU,KAAM,OACNC,OAAQV,EACRW,OAAQT,IAQVG,EAAU,KAOVL,EAAaY,GAAG,SAAS,SAAUC,GAEjCR,EADgBQ,EAAMC,QAAUd,EAAae,SAASjC,c","file":"main.d6de7465394bf707d0f3.js","sourcesContent":["import $ from 'jquery';\r\nimport './styles.css';\r\n\r\nimport { gsap, TweenLite, TweenMax } from 'gsap';\r\nimport { Draggable } from 'gsap/Draggable';\r\n\r\ngsap.registerPlugin(Draggable);\r\n\r\nconst cursorOuter = document.querySelector('.cursor--large');\r\nconst cursorInner = document.querySelector('.cursor--small');\r\nlet isStuck = false;\r\nlet mouse = {\r\n  x: -100,\r\n  y: -100,\r\n};\r\n\r\n// Just in case you need to scroll\r\nlet scrollHeight = 0;\r\nwindow.addEventListener('scroll', function (e) {\r\n  scrollHeight = window.scrollY;\r\n});\r\n\r\nlet cursorOuterOriginalState = {\r\n  width: cursorOuter.getBoundingClientRect().width,\r\n  height: cursorOuter.getBoundingClientRect().height,\r\n};\r\nconst buttons = document.querySelectorAll('.item a');\r\n\r\nbuttons.forEach(button => {\r\n  button.addEventListener('pointerenter', handleMouseEnter);\r\n  button.addEventListener('pointerleave', handleMouseLeave);\r\n});\r\n\r\ndocument.body.addEventListener('pointermove', updateCursorPosition);\r\ndocument.body.addEventListener('pointerdown', () => {\r\n  gsap.to(cursorInner, 0.15, {\r\n    scale: 2,\r\n  });\r\n});\r\ndocument.body.addEventListener('pointerup', () => {\r\n  gsap.to(cursorInner, 0.15, {\r\n    scale: 1,\r\n  });\r\n});\r\n\r\nfunction updateCursorPosition(e) {\r\n  mouse.x = e.pageX;\r\n  mouse.y = e.pageY;\r\n}\r\n\r\nfunction updateCursor() {\r\n  gsap.set(cursorInner, {\r\n    x: mouse.x,\r\n    y: mouse.y,\r\n  });\r\n\r\n  if (!isStuck) {\r\n    gsap.to(cursorOuter, {\r\n      duration: 0.15,\r\n      x: mouse.x - cursorOuterOriginalState.width / 2,\r\n      y: mouse.y - cursorOuterOriginalState.height / 2,\r\n    });\r\n  }\r\n\r\n  requestAnimationFrame(updateCursor);\r\n}\r\n\r\nupdateCursor();\r\n\r\nfunction handleMouseEnter(e) {\r\n  isStuck = true;\r\n  const targetBox = e.currentTarget.getBoundingClientRect();\r\n  gsap.to(cursorOuter, 0.2, {\r\n    x: targetBox.left,\r\n    y: targetBox.top + scrollHeight,\r\n    width: targetBox.width,\r\n    height: targetBox.width,\r\n    borderRadius: 0,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n  });\r\n}\r\n\r\nfunction handleMouseLeave(e) {\r\n  isStuck = false;\r\n  gsap.to(cursorOuter, 0.2, {\r\n    width: cursorOuterOriginalState.width,\r\n    height: cursorOuterOriginalState.width,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'transparent',\r\n  });\r\n}\r\n\r\n$(function () {\r\n  var $dragMe = $('#dragme');\r\n  var $beforeAfter = $('#before-after');\r\n  var $viewAfter = $('.view-after');\r\n\r\n  Draggable.create($dragMe, {\r\n    type: 'left',\r\n    bounds: $beforeAfter,\r\n    onDrag: updateImages,\r\n  });\r\n\r\n  function updateImages() {\r\n    TweenLite.set($viewAfter, { width: $dragMe.css('left') }); //or this.x if only dragging\r\n  }\r\n\r\n  //Intro Animation\r\n  animateTo(300);\r\n\r\n  function animateTo(_left) {\r\n    TweenLite.to($dragMe, 1, { left: _left, onUpdate: updateImages });\r\n  }\r\n\r\n  //V2 Click added\r\n  $beforeAfter.on('click', function (event) {\r\n    var eventLeft = event.clientX - $beforeAfter.offset().left;\r\n    animateTo(eventLeft);\r\n  });\r\n}); //end jQuery wrapper\r\n"],"sourceRoot":""}